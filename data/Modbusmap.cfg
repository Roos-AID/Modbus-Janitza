// Configuration file to map modbus registers
// file format is CSV , all values as string without "" ,  fields are
// reg = register address
// format = (Modbus_short, Modbus_ushort, Modbus_int, Modbus_uint, Modbus_float, Modbus_undef)  (Only short and float implemented in rel 1)
// operation = (Modbus_READ, Modbus_RW, Modbus_UNDEF)  (Only Modbus_READ implemented in rel 1)
// label = Short label string
// friendlyname = string in UI
// unit = V, A, wH etc.
// phase = 1,2,3 or 0 for generic and 4 for sum
// reg, format, operation, label, friendlyname, unit, phase
// There are max 40 registers to be specified, errors are ignored.
19000, Modbus_float, Modbus_READ, UL1N, Voltage L1-N, V, 1
19002, Modbus_float, Modbus_READ, UL2N, Voltage L2-N, V, 2
19004, Modbus_float, Modbus_READ, UL3N, Voltage L3-N, V, 3
19012, Modbus_float, Modbus_READ, CurL1, Current L1, A, 1
19014, Modbus_float, Modbus_READ, CurL2, Current L2, A, 2
19016, Modbus_float, Modbus_READ, CurL3, Current L3, A, 3
19018, Modbus_float, Modbus_READ, CurVSum, Vector sum IN=I1+I2+I3, A, 4
3916, Modbus_short, Modbus_READ, CurIL1, Current I L1, mA, 1
3917, Modbus_short, Modbus_READ, CurIL2, Current I L2, mA, 2
3918, Modbus_short, Modbus_READ, CurIL3, Current I L3, mA, 3
19020, Modbus_float, Modbus_READ, RlPwrL1, Real power L1, W, 1
19022, Modbus_float, Modbus_READ, RlPwrL2, Real power L2, W, 2
19024, Modbus_float, Modbus_READ, RlPwrL3, Real power L3, W, 3
19026, Modbus_float, Modbus_READ, RlPwrSum, Sum Psum=P1+P2+P3, W, 4
19054, Modbus_float, Modbus_READ, RlEnerL1, Real energy L1, Wh, 1
19056, Modbus_float, Modbus_READ, RlEnerL2, Real energy L2, Wh, 2
19058, Modbus_float, Modbus_READ, RlEnerL3, Real energy L3, Wh, 3
19060, Modbus_float, Modbus_READ, RlEnerSum, Real energy L1..L3, Wh, 4
19050, Modbus_float, Modbus_READ, Freq, Measured frequency, Hz, 0
3526, Modbus_short, Modbus_READ, FreqIn, Frequency, Hz,0
3527, Modbus_short, Modbus_READ, Vzeroseq, Voltage zero sequence, V,0
3528, Modbus_short, Modbus_READ, Vnegseq, Voltage negative sequence, V,0
3529, Modbus_short, Modbus_READ, Vposseq, Voltage positive sequence, V,0
